name: Automatic Release

on:
  workflow_call:
    inputs:
      node_version:
        type: string
        default: 'latest'
      is_build:
        type: boolean
        default: true
      is_publish:
        type: boolean
        default: false
      environment:
        type: string
        required: true
    secrets:
      SEMANTIC_BOT_APP_ID:
        required: true
      SEMANTIC_BOT_PRIVATE_KEY:
        required: true
      NPM_TOKEN:
        required: false

jobs:
  release:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:  
      issues: write
      contents: write
      packages: write
    steps:
      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.SEMANTIC_BOT_APP_ID }}
          private-key: ${{ secrets.SEMANTIC_BOT_PRIVATE_KEY }}

      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: vfourny
          minimum-approvals: 1
          issue-title: "Deploying v1.3.5 to prod from staging"
          issue-body: "Please approve or deny the deployment of version v1.3.5."
          exclude-workflow-initiator-as-approver: false
          additional-approved-words: ''
          additional-denied-words: ''

      - name: Checking out code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          token: ${{ steps.generate_token.outputs.token }}

      - name: Setting up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}

      - name: Install dependencies
        run: npm ci

      - name: Upload previous build artifact
        if: ${{ inputs.is_build }}
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Release and publish
        run: npx semantic-release
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          PUBLISH: ${{ inputs.is_publish }}
